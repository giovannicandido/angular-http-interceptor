/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from './interceptor.module';
import * as import2 from '@angular/core/src/di/injector';
import * as import3 from './interfaces';
import * as import4 from '@angular/http/src/backends/xhr_backend';
import * as import5 from '@angular/http/src/base_request_options';
import * as import6 from '@angular/http/src/http';
import * as import7 from './custom-http';
class InterceptorModuleInjector extends import0.NgModuleInjector<import1.InterceptorModule> {
  _InterceptorModule_0:import1.InterceptorModule;
  __Http_1:any;
  __CustomHttp_2:any;
  constructor(parent:import2.Injector) {
    super(parent,([] as any[]),([] as any[]));
  }
  get _Http_1():any {
    if ((this.__Http_1 == null)) { (this.__Http_1 = import1.httpFactory(this.parent.get(import3.Interceptor),this.parent.get(import4.XHRBackend),this.parent.get(import5.RequestOptions))); }
    return this.__Http_1;
  }
  get _CustomHttp_2():any {
    if ((this.__CustomHttp_2 == null)) { (this.__CustomHttp_2 = this._Http_1); }
    return this.__CustomHttp_2;
  }
  createInternal():import1.InterceptorModule {
    this._InterceptorModule_0 = new import1.InterceptorModule();
    return this._InterceptorModule_0;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import1.InterceptorModule)) { return this._InterceptorModule_0; }
    if ((token === import6.Http)) { return this._Http_1; }
    if ((token === import7.CustomHttp)) { return this._CustomHttp_2; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const InterceptorModuleNgFactory:import0.NgModuleFactory<import1.InterceptorModule> = new import0.NgModuleFactory(InterceptorModuleInjector,import1.InterceptorModule);